{
  "address": "0xd2C3ebFB8e7e79CA84080a8551D86Df50B0F559d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "__voter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "__ve",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "__rewards_distributor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weekly",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "circulating_supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "circulating_emission",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_TEAM_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_rewards_distributor",
      "outputs": [
        {
          "internalType": "contract IRewardsDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_ve",
      "outputs": [
        {
          "internalType": "contract IVotingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_velo",
      "outputs": [
        {
          "internalType": "contract IVelo",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_voter",
      "outputs": [
        {
          "internalType": "contract IVoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "active_period",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculate_emission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minted",
          "type": "uint256"
        }
      ],
      "name": "calculate_growth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulating_emission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulating_supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "claimants",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingTeam",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "setTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_teamRate",
          "type": "uint256"
        }
      ],
      "name": "setTeamRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "team",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update_period",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weekly",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weekly_emission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x168c6cf31abe5f09dda0cfddf11ffbc4b8dc5adc5590029193721e79a137368f",
  "receipt": {
    "to": null,
    "from": "0x3406eDA8850592Ea85886d854EDBD55042CB7805",
    "contractAddress": "0xd2C3ebFB8e7e79CA84080a8551D86Df50B0F559d",
    "transactionIndex": 1,
    "gasUsed": "12422232",
    "logsBloom": "0x
    "blockHash": "0x4ff31abdadb682b773acc1285d51d5ebf31972ea063150d92009d5ec9a9ddcaa",
    "transactionHash": "0x168c6cf31abe5f09dda0cfddf11ffbc4b8dc5adc5590029193721e79a137368f",
    "logs": [],
    "blockNumber": 4195027,
    "cumulativeGasUsed": "12422232",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x574607c69f369f0535E77C5F7C35767Aee04879A",
    "0x6b938BA22FB5520fFB5D14c9C4Fef82a48761497",
    "0xf6CdA702C6Bd15d5C0A325CE8f9f88219fE5F445"
  ],
  "numDeployments": 3,
  "solcInputHash": "0faaa79d8b79020b765ba7705413c447",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__voter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__ve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__rewards_distributor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weekly\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"circulating_supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"circulating_emission\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TEAM_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewards_distributor\",\"outputs\":[{\"internalType\":\"contract IRewardsDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ve\",\"outputs\":[{\"internalType\":\"contract IVotingEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_velo\",\"outputs\":[{\"internalType\":\"contract IVelo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_voter\",\"outputs\":[{\"internalType\":\"contract IVoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculate_emission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minted\",\"type\":\"uint256\"}],\"name\":\"calculate_growth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulating_emission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulating_supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"claimants\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"setTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamRate\",\"type\":\"uint256\"}],\"name\":\"setTeamRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weekly\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weekly_emission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Minter.sol\":\"Minter\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363733323636393538333833\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Minter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.13;\\n\\nimport \\\"contracts/libraries/Math.sol\\\";\\nimport \\\"contracts/interfaces/IMinter.sol\\\";\\nimport \\\"contracts/interfaces/IRewardsDistributor.sol\\\";\\nimport \\\"contracts/interfaces/IVelo.sol\\\";\\nimport \\\"contracts/interfaces/IVoter.sol\\\";\\nimport \\\"contracts/interfaces/IVotingEscrow.sol\\\";\\n\\n// codifies the minting rules as per ve(3,3), abstracted from the token to support any token that allows minting\\n\\ncontract Minter is IMinter {\\n    uint256 internal constant WEEK = 86400 * 7; // allows minting once per week (reset every Thursday 00:00 UTC)\\n    uint256 internal constant EMISSION = 990;\\n    uint256 internal constant TAIL_EMISSION = 2;\\n    uint256 internal constant PRECISION = 1000;\\n    IVelo public immutable _velo;\\n    IVoter public immutable _voter;\\n    IVotingEscrow public immutable _ve;\\n    IRewardsDistributor public immutable _rewards_distributor;\\n    uint256 public weekly = 15_000_000 * 1e18; // represents a starting weekly emission of 15M VELO (VELO has 18 decimals)\\n    uint256 public active_period;\\n    uint256 internal constant LOCK = 86400 * 7 * 52 * 4;\\n\\n    address internal initializer;\\n    address public team;\\n    address public pendingTeam;\\n    uint256 public teamRate;\\n    uint256 public constant MAX_TEAM_RATE = 50; // 50 bps = 0.05%\\n\\n    event Mint(\\n        address indexed sender,\\n        uint256 weekly,\\n        uint256 circulating_supply,\\n        uint256 circulating_emission\\n    );\\n\\n    constructor(\\n        address __voter, // the voting & distribution system\\n        address __ve, // the ve(3,3) system that will be locked into\\n        address __rewards_distributor // the distribution system that ensures users aren't diluted\\n    ) {\\n        initializer = msg.sender;\\n        team = msg.sender;\\n        teamRate = 30; // 30 bps = 0.03%\\n        _velo = IVelo(IVotingEscrow(__ve).token());\\n        _voter = IVoter(__voter);\\n        _ve = IVotingEscrow(__ve);\\n        _rewards_distributor = IRewardsDistributor(__rewards_distributor);\\n        active_period = ((block.timestamp + (2 * WEEK)) / WEEK) * WEEK;\\n    }\\n\\n    function initialize(\\n        address[] memory claimants,\\n        uint256[] memory amounts,\\n        uint256 max // sum amounts / max = % ownership of top protocols, so if initial 20m is distributed, and target is 25% protocol ownership, then max - 4 x 20m = 80m\\n    ) external {\\n        require(initializer == msg.sender);\\n        _velo.mint(address(this), max);\\n        _velo.approve(address(_ve), type(uint256).max);\\n        for (uint256 i = 0; i < claimants.length; i++) {\\n            _ve.create_lock_for(amounts[i], LOCK, claimants[i]);\\n        }\\n        initializer = address(0);\\n        active_period = ((block.timestamp) / WEEK) * WEEK; // allow minter.update_period() to mint new emissions THIS Thursday\\n    }\\n\\n    function setTeam(address _team) external {\\n        require(msg.sender == team, \\\"not team\\\");\\n        pendingTeam = _team;\\n    }\\n\\n    function acceptTeam() external {\\n        require(msg.sender == pendingTeam, \\\"not pending team\\\");\\n        team = pendingTeam;\\n    }\\n\\n    function setTeamRate(uint256 _teamRate) external {\\n        require(msg.sender == team, \\\"not team\\\");\\n        require(_teamRate <= MAX_TEAM_RATE, \\\"rate too high\\\");\\n        teamRate = _teamRate;\\n    }\\n\\n    // calculate circulating supply as total token supply - locked supply\\n    function circulating_supply() public view returns (uint256) {\\n        return _velo.totalSupply() - _ve.totalSupply();\\n    }\\n\\n    // emission calculation is 1% of available supply to mint adjusted by circulating / total supply\\n    function calculate_emission() public view returns (uint256) {\\n        return (weekly * EMISSION) / PRECISION;\\n    }\\n\\n    // weekly emission takes the max of calculated (aka target) emission versus circulating tail end emission\\n    function weekly_emission() public view returns (uint256) {\\n        return MathDunks.max(calculate_emission(), circulating_emission());\\n    }\\n\\n    // calculates tail end (infinity) emissions as 0.2% of total supply\\n    function circulating_emission() public view returns (uint256) {\\n        return (circulating_supply() * TAIL_EMISSION) / PRECISION;\\n    }\\n\\n    // calculate inflation and adjust ve balances accordingly\\n    function calculate_growth(uint256 _minted) public view returns (uint256) {\\n        uint256 _veTotal = _ve.totalSupply();\\n        uint256 _veloTotal = _velo.totalSupply();\\n        return\\n            (((((_minted * _veTotal) / _veloTotal) * _veTotal) / _veloTotal) *\\n                _veTotal) /\\n            _veloTotal /\\n            2;\\n    }\\n\\n    // update period can only be called once per cycle (1 week)\\n    function update_period() external returns (uint256) {\\n        uint256 _period = active_period;\\n        if (block.timestamp >= _period + WEEK && initializer == address(0)) {\\n            // only trigger if new week\\n            _period = (block.timestamp / WEEK) * WEEK;\\n            active_period = _period;\\n            weekly = weekly_emission();\\n\\n            uint256 _growth = calculate_growth(weekly);\\n            uint256 _teamEmissions = (teamRate * (_growth + weekly)) /\\n                (PRECISION - teamRate);\\n            uint256 _required = _growth + weekly + _teamEmissions;\\n            uint256 _balanceOf = _velo.balanceOf(address(this));\\n            if (_balanceOf < _required) {\\n                _velo.mint(address(this), _required - _balanceOf);\\n            }\\n\\n            require(_velo.transfer(team, _teamEmissions));\\n            require(_velo.transfer(address(_rewards_distributor), _growth));\\n            _rewards_distributor.checkpoint_token(); // checkpoint token balance that was just minted in rewards distributor\\n            _rewards_distributor.checkpoint_total_supply(); // checkpoint supply\\n\\n            _velo.approve(address(_voter), weekly);\\n            _voter.notifyRewardAmount(weekly);\\n\\n            emit Mint(\\n                msg.sender,\\n                weekly,\\n                circulating_supply(),\\n                circulating_emission()\\n            );\\n        }\\n        return _period;\\n    }\\n}\\n\",\"keccak256\":\"0x8dce50c09815e53982006f9ddc46cd52cf7ac86b0c1b7bb15c817f86fb990580\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/IMinter.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\ninterface IMinter {\\n    function update_period() external returns (uint);\\n}\\n\",\"keccak256\":\"0x22a493b7559b31b779773d0279189161af0d6c0e741d470fd7a8afdf91558304\"},\"contracts/interfaces/IRewardsDistributor.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\ninterface IRewardsDistributor {\\n    function checkpoint_token() external;\\n    function checkpoint_total_supply() external;\\n}\\n\",\"keccak256\":\"0x34c330b70b2b8847a6afce921a69eed82d1ecb3d2a0ee61401619a7b28e69243\"},\"contracts/interfaces/IVelo.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\ninterface IVelo {\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address) external view returns (uint);\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address, uint) external returns (bool);\\n    function transferFrom(address,address,uint) external returns (bool);\\n    function mint(address, uint) external returns (bool);\\n    function minter() external returns (address);\\n    function claim(address, uint) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4372772b06c7acb09381d2d722fbc927d580c8d8022512e2949bb7aded4f1699\"},\"contracts/interfaces/IVoter.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\ninterface IVoter {\\n    function _ve() external view returns (address);\\n    function governor() external view returns (address);\\n    function emergencyCouncil() external view returns (address);\\n    function attachTokenToGauge(uint _tokenId, address account) external;\\n    function detachTokenFromGauge(uint _tokenId, address account) external;\\n    function emitDeposit(uint _tokenId, address account, uint amount) external;\\n    function emitWithdraw(uint _tokenId, address account, uint amount) external;\\n    function isWhitelisted(address token) external view returns (bool);\\n    function notifyRewardAmount(uint amount) external;\\n    function distribute(address _gauge) external;\\n}\\n\",\"keccak256\":\"0x033115b88f156c6db67ca468fc9da8e4197bbd48bc8cf5a1652b9ebd307b2d31\"},\"contracts/interfaces/IVotingEscrow.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\ninterface IVotingEscrow {\\n\\n    struct Point {\\n        int128 bias;\\n        int128 slope; // # -dweight / dt\\n        uint256 ts;\\n        uint256 blk; // block\\n    }\\n\\n    function token() external view returns (address);\\n    function team() external returns (address);\\n    function epoch() external view returns (uint);\\n    function point_history(uint loc) external view returns (Point memory);\\n    function user_point_history(uint tokenId, uint loc) external view returns (Point memory);\\n    function user_point_epoch(uint tokenId) external view returns (uint);\\n\\n    function ownerOf(uint) external view returns (address);\\n    function isApprovedOrOwner(address, uint) external view returns (bool);\\n    function transferFrom(address, address, uint) external;\\n\\n    function voting(uint tokenId) external;\\n    function abstain(uint tokenId) external;\\n    function attach(uint tokenId) external;\\n    function detach(uint tokenId) external;\\n\\n    function checkpoint() external;\\n    function deposit_for(uint tokenId, uint value) external;\\n    function create_lock_for(uint, uint, address) external returns (uint);\\n\\n    function balanceOfNFT(uint) external view returns (uint);\\n    function totalSupply() external view returns (uint);\\n}\\n\",\"keccak256\":\"0x9c51afef11e82c70d08871264602e385a4f7caf36383e1bc5a6c214f93a4c0d1\"},\"contracts/libraries/Math.sol\":{\"content\":\"pragma solidity 0.8.13;\\n\\n// this causes issue with forge test as there is already a Math.sol in the forge repo\\nlibrary MathDunks {\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\\n        if (y > 3) {\\n            z = y;\\n            uint256 x = y / 2 + 1;\\n            while (x < z) {\\n                z = x;\\n                x = (y / x + x) / 2;\\n            }\\n        } else if (y != 0) {\\n            z = 1;\\n        }\\n    }\\n\\n    function cbrt(uint256 n) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 x = 0;\\n            for (uint256 y = 1 << 255; y > 0; y >>= 3) {\\n                x <<= 1;\\n                uint256 z = 3 * x * (x + 1) + 1;\\n                if (n / y >= z) {\\n                    n -= y * z;\\n                    x += 1;\\n                }\\n            }\\n            return x;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd7894a4b5d2afa5680c6a4c3de7dcb26ccd7dcf4339ca9d4478677cd5dc32be9\"}},\"version\":1}",
  "bytecode": "0x6101006040526a0c685fa11e01ec6f0000006000553480156200002157600080fd5b506040516200158938038062001589833981016040819052620000449162000156565b60028054336001600160a01b03199182168117909255600380549091169091179055601e60055560408051637e062a3560e11b815290516001600160a01b0384169163fc0c546a9160048083019260209291908290030181865afa158015620000b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d79190620001a0565b6001600160a01b0390811660805283811660a05282811660c052811660e05262093a808062000108816002620001db565b620001149042620001fd565b62000120919062000218565b6200012c9190620001db565b600155506200023b915050565b80516001600160a01b03811681146200015157600080fd5b919050565b6000806000606084860312156200016c57600080fd5b620001778462000139565b9250620001876020850162000139565b9150620001976040850162000139565b90509250925092565b600060208284031215620001b357600080fd5b620001be8262000139565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620001f857620001f8620001c5565b500290565b60008219821115620002135762000213620001c5565b500190565b6000826200023657634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e051611296620002f3600039600081816101f801528181610c3701528181610cde0152610d51015260008181610261015281816104b30152818161055f0152818161068901526108750152600081816101d101528181610e090152610ea301526000818161015101528181610426015281816104e30152818161070f015281816108f701528181610a5f01528181610ade01528181610ba801528181610c660152610dda01526112966000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806378ef7f02116100ad578063b5cc143a11610071578063b5cc143a14610296578063cfc6c8ff1461029e578063d1399608146102a6578063e038c75a146102af578063ed29fc11146102b757600080fd5b806378ef7f021461022d578063851708131461023657806385f2aef2146102495780638dd598fb1461025c5780638e01fbfa1461028357600080fd5b80632e8f7b1f116100f45780632e8f7b1f146101b157806336d96faf146101c45780633db9b42a146101cc5780634b1cd5da146101f357806359d46ffc1461021a57600080fd5b806301c8e6fd1461013157806308aa44581461014c578063095cf5c61461018b5780631eebae80146101a057806326cfc17b146101a8575b600080fd5b610139603281565b6040519081526020015b60405180910390f35b6101737f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610143565b61019e610199366004610f9d565b6102bf565b005b61013961032b565b61013960005481565b61019e6101bf366004610fb8565b610353565b6101396103de565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b600454610173906001600160a01b031681565b61013960055481565b61019e6102443660046110a7565b6103f3565b600354610173906001600160a01b031681565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b610139610291366004610fb8565b610684565b61019e6107e6565b610139610857565b61013960015481565b610139610871565b610139610981565b6003546001600160a01b031633146103095760405162461bcd60e51b81526020600482015260086024820152676e6f74207465616d60c01b60448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e8600261033a610871565b6103449190611186565b61034e91906111a5565b905090565b6003546001600160a01b031633146103985760405162461bcd60e51b81526020600482015260086024820152676e6f74207465616d60c01b6044820152606401610300565b60328111156103d95760405162461bcd60e51b815260206004820152600d60248201526c0e4c2e8ca40e8dede40d0d2ced609b1b6044820152606401610300565b600555565b60006103e86103de6000546103449190611186565b6002546001600160a01b0316331461040a57600080fd5b6040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044016020604051808303816000875af1158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b91906111c7565b5060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055091906111c7565b5060005b8351811015610653577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4e54c3b84838151811061059e5761059e6111e9565b602002602001015163077f88008785815181106105bd576105bd6111e9565b60200260200101516040518463ffffffff1660e01b81526004016105fd9392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af115801561061c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064091906111ff565b508061064b81611218565b915050610554565b50600280546001600160a01b031916905562093a8061067281426111a5565b61067c9190611186565b600155505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070991906111ff565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f91906111ff565b9050600281838181816107a2828b611186565b6107ac91906111a5565b6107b69190611186565b6107c091906111a5565b6107ca9190611186565b6107d491906111a5565b6107de91906111a5565b949350505050565b6004546001600160a01b031633146108335760405162461bcd60e51b815260206004820152601060248201526f6e6f742070656e64696e67207465616d60801b6044820152606401610300565b600454600380546001600160a01b0319166001600160a01b03909216919091179055565b600061034e6108646103de565b61086c61032b565b610f6d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f591906111ff565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097791906111ff565b61034e9190611231565b60015460009061099462093a8082611248565b42101580156109ac57506002546001600160a01b0316155b15610f685762093a806109bf81426111a5565b6109c99190611186565b600181905590506109d8610857565b6000818155906109e790610684565b905060006005546103e86109fb9190611231565b600054610a089084611248565b600554610a159190611186565b610a1f91906111a5565b905060008160005484610a329190611248565b610a3c9190611248565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca91906111ff565b905081811015610b7f576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f1930610b0e8486611231565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d91906111c7565b505b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1791906111c7565b610c2057600080fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd391906111c7565b610cdc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663811a40fe6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b21ed5026040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610daa57600080fd5b505af1158015610dbe573d6000803e3d6000fd5b505060005460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b39250610e45917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8891906111c7565b50600054604051633c6b16ab60e01b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c6b16ab90602401600060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b50505050336001600160a01b03167fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb600054610f3d610871565b610f4561032b565b6040805193845260208401929092529082015260600160405180910390a2505050505b919050565b600081831015610f7d5781610f7f565b825b9392505050565b80356001600160a01b0381168114610f6857600080fd5b600060208284031215610faf57600080fd5b610f7f82610f86565b600060208284031215610fca57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561101057611010610fd1565b604052919050565b600067ffffffffffffffff82111561103257611032610fd1565b5060051b60200190565b600082601f83011261104d57600080fd5b8135602061106261105d83611018565b610fe7565b82815260059290921b8401810191818101908684111561108157600080fd5b8286015b8481101561109c5780358352918301918301611085565b509695505050505050565b6000806000606084860312156110bc57600080fd5b833567ffffffffffffffff808211156110d457600080fd5b818601915086601f8301126110e857600080fd5b813560206110f861105d83611018565b82815260059290921b8401810191818101908a84111561111757600080fd5b948201945b8386101561113c5761112d86610f86565b8252948201949082019061111c565b9750508701359250508082111561115257600080fd5b5061115f8682870161103c565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156111a0576111a0611170565b500290565b6000826111c257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156111d957600080fd5b81518015158114610f7f57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561121157600080fd5b5051919050565b60006001820161122a5761122a611170565b5060010190565b60008282101561124357611243611170565b500390565b6000821982111561125b5761125b611170565b50019056fea2646970667358221220b8d7ed6a52e73b73f97d46da03043d96cda8f93d690887652d48bca060b4064c64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806378ef7f02116100ad578063b5cc143a11610071578063b5cc143a14610296578063cfc6c8ff1461029e578063d1399608146102a6578063e038c75a146102af578063ed29fc11146102b757600080fd5b806378ef7f021461022d578063851708131461023657806385f2aef2146102495780638dd598fb1461025c5780638e01fbfa1461028357600080fd5b80632e8f7b1f116100f45780632e8f7b1f146101b157806336d96faf146101c45780633db9b42a146101cc5780634b1cd5da146101f357806359d46ffc1461021a57600080fd5b806301c8e6fd1461013157806308aa44581461014c578063095cf5c61461018b5780631eebae80146101a057806326cfc17b146101a8575b600080fd5b610139603281565b6040519081526020015b60405180910390f35b6101737f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610143565b61019e610199366004610f9d565b6102bf565b005b61013961032b565b61013960005481565b61019e6101bf366004610fb8565b610353565b6101396103de565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b600454610173906001600160a01b031681565b61013960055481565b61019e6102443660046110a7565b6103f3565b600354610173906001600160a01b031681565b6101737f000000000000000000000000000000000000000000000000000000000000000081565b610139610291366004610fb8565b610684565b61019e6107e6565b610139610857565b61013960015481565b610139610871565b610139610981565b6003546001600160a01b031633146103095760405162461bcd60e51b81526020600482015260086024820152676e6f74207465616d60c01b60448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60006103e8600261033a610871565b6103449190611186565b61034e91906111a5565b905090565b6003546001600160a01b031633146103985760405162461bcd60e51b81526020600482015260086024820152676e6f74207465616d60c01b6044820152606401610300565b60328111156103d95760405162461bcd60e51b815260206004820152600d60248201526c0e4c2e8ca40e8dede40d0d2ced609b1b6044820152606401610300565b600555565b60006103e86103de6000546103449190611186565b6002546001600160a01b0316331461040a57600080fd5b6040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044016020604051808303816000875af1158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b91906111c7565b5060405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055091906111c7565b5060005b8351811015610653577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d4e54c3b84838151811061059e5761059e6111e9565b602002602001015163077f88008785815181106105bd576105bd6111e9565b60200260200101516040518463ffffffff1660e01b81526004016105fd9392919092835260208301919091526001600160a01b0316604082015260600190565b6020604051808303816000875af115801561061c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064091906111ff565b508061064b81611218565b915050610554565b50600280546001600160a01b031916905562093a8061067281426111a5565b61067c9190611186565b600155505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070991906111ff565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078f91906111ff565b9050600281838181816107a2828b611186565b6107ac91906111a5565b6107b69190611186565b6107c091906111a5565b6107ca9190611186565b6107d491906111a5565b6107de91906111a5565b949350505050565b6004546001600160a01b031633146108335760405162461bcd60e51b815260206004820152601060248201526f6e6f742070656e64696e67207465616d60801b6044820152606401610300565b600454600380546001600160a01b0319166001600160a01b03909216919091179055565b600061034e6108646103de565b61086c61032b565b610f6d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f591906111ff565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097791906111ff565b61034e9190611231565b60015460009061099462093a8082611248565b42101580156109ac57506002546001600160a01b0316155b15610f685762093a806109bf81426111a5565b6109c99190611186565b600181905590506109d8610857565b6000818155906109e790610684565b905060006005546103e86109fb9190611231565b600054610a089084611248565b600554610a159190611186565b610a1f91906111a5565b905060008160005484610a329190611248565b610a3c9190611248565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca91906111ff565b905081811015610b7f576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f1930610b0e8486611231565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d91906111c7565b505b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1791906111c7565b610c2057600080fd5b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd391906111c7565b610cdc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663811a40fe6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b21ed5026040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610daa57600080fd5b505af1158015610dbe573d6000803e3d6000fd5b505060005460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b39250610e45917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8891906111c7565b50600054604051633c6b16ab60e01b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c6b16ab90602401600060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b50505050336001600160a01b03167fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb600054610f3d610871565b610f4561032b565b6040805193845260208401929092529082015260600160405180910390a2505050505b919050565b600081831015610f7d5781610f7f565b825b9392505050565b80356001600160a01b0381168114610f6857600080fd5b600060208284031215610faf57600080fd5b610f7f82610f86565b600060208284031215610fca57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561101057611010610fd1565b604052919050565b600067ffffffffffffffff82111561103257611032610fd1565b5060051b60200190565b600082601f83011261104d57600080fd5b8135602061106261105d83611018565b610fe7565b82815260059290921b8401810191818101908684111561108157600080fd5b8286015b8481101561109c5780358352918301918301611085565b509695505050505050565b6000806000606084860312156110bc57600080fd5b833567ffffffffffffffff808211156110d457600080fd5b818601915086601f8301126110e857600080fd5b813560206110f861105d83611018565b82815260059290921b8401810191818101908a84111561111757600080fd5b948201945b8386101561113c5761112d86610f86565b8252948201949082019061111c565b9750508701359250508082111561115257600080fd5b5061115f8682870161103c565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156111a0576111a0611170565b500290565b6000826111c257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156111d957600080fd5b81518015158114610f7f57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561121157600080fd5b5051919050565b60006001820161122a5761122a611170565b5060010190565b60008282101561124357611243611170565b500390565b6000821982111561125b5761125b611170565b50019056fea2646970667358221220b8d7ed6a52e73b73f97d46da03043d96cda8f93d690887652d48bca060b4064c64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6187,
        "contract": "contracts/Minter.sol:Minter",
        "label": "weekly",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 6189,
        "contract": "contracts/Minter.sol:Minter",
        "label": "active_period",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 6200,
        "contract": "contracts/Minter.sol:Minter",
        "label": "initializer",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6202,
        "contract": "contracts/Minter.sol:Minter",
        "label": "team",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6204,
        "contract": "contracts/Minter.sol:Minter",
        "label": "pendingTeam",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 6206,
        "contract": "contracts/Minter.sol:Minter",
        "label": "teamRate",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}